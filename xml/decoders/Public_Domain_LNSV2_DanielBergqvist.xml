<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../XSLT/decoder.xsl"?>
<!-- Copyright (C) JMRI 2002, 2004, 2007, 2020 All rights reserved -->
<!--                                                                        -->
<!-- JMRI is free software; you can redistribute it and/or modify it under  -->
<!-- the terms of version 2 of the GNU General Public License as published  -->
<!-- by the Free Software Foundation. See the "COPYING" file for a copy     -->
<!-- of this license.                                                       -->
<!--                                                                        -->
<!-- JMRI is distributed in the hope that it will be useful, but WITHOUT    -->
<!-- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or  -->
<!-- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License  -->
<!-- for more details.                                                      -->
<decoder-config xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://jmri.org/xml/schema/decoder.xsd">
  <version author="Bob Jacobsen" version="1" lastUpdated="20150812"/>
  <version author="Daniel Bergqvist" version="2" lastUpdated="20200418"/>
  <!-- version 1 - test only -->
  <decoder>
    <family name="Daniel Bergqvist example card" mfg="Public-domain and DIY">
      <model model="StringIO and AnalogIO" productID="1" developerID="17" />
    </family>
    <programming direct="no" paged="no" register="no" ops="no">
        <mode>LOCONETSV2MODE</mode>
    </programming>
    <variables>

     <!-- Is the following actually accessible via the SV protocol? -->
      <variable CV="999" comment="Board SV address" item="Short Address" default="03">
        <decVal/>
        <label>Board Address</label>
      </variable>

      <variable CV="1" comment="Size of memory in bytes" readOnly="yes"  item="Advanced Group 1 Option 1">
        <enumVal>
          <enumChoice>
            <choice>256 bytes</choice>
          </enumChoice>
          <enumChoice>
            <choice>512 bytes</choice>
          </enumChoice>
          <enumChoice>
            <choice>1024 bytes</choice>
          </enumChoice>
          <enumChoice>
            <choice>2048 bytes</choice>
          </enumChoice>
          <enumChoice>
            <choice>4096 bytes</choice>
          </enumChoice>
        </enumVal>
        <label>EEPROM Size</label>
      </variable>
      <variable CV="2" item="Decoder Version" >
        <decVal/>
        <label>Manufacturer Version No.</label>
      </variable>

      <variable CV="8" readOnly="yes" item="Manufacturer">
        <decVal/>
        <label>Manufacturer ID: </label>
      </variable>
<!--
      <variable item="Dummy 10" CV="10">
        <decVal/>
      </variable>
      <variable item="Dummy 11" CV="11">
        <decVal/>
      </variable>
      <variable item="Dummy 12" CV="12">
        <decVal/>
      </variable>
      <variable item="Dummy 13" CV="13">
        <decVal/>
      </variable>
      <variable item="Dummy 14" CV="14">
        <decVal/>
      </variable>
      <variable item="Dummy 15" CV="15">
        <decVal/>
      </variable>
      <variable item="Dummy 16" CV="16">
        <decVal/>
      </variable>
      <variable item="Dummy 17" CV="17">
        <decVal/>
      </variable>
      <variable item="Dummy 18" CV="18">
        <decVal/>
      </variable>
      <variable item="Dummy 19" CV="19">
        <decVal/>
      </variable>
-->
    </variables>
  </decoder>
  <loconet-node>
    <stringios>
      <stringio>
        <!-- A file name for a sound to play on the mp3 player -->
        <name>mp3_player</name>
        <variable_length>yes</variable_length>
        <max_length>32</max_length>
        <first_sv>52</first_sv>
        <encoding>utf8</encoding>
        <pad_spaces>no</pad_spaces>
        <read_write>write</read_write>
      </stringio>
      <stringio>
        <!-- Show text on the LCD display -->
        <name>LCD display</name>
        <variable_length>no</variable_length>
        <max_length>16</max_length>
        <first_sv>60</first_sv>
        <encoding>latin1</encoding>
        <pad_spaces>yes</pad_spaces>
        <read_write>read_write</read_write>
      </stringio>
      <stringio>
        <!-- Read input from the keyboard -->
        <name>Keyboard</name>
        <variable_length>no</variable_length>
        <max_length>8</max_length>
        <first_sv>64</first_sv>
        <encoding>latin1</encoding>
        <pad_spaces>no</pad_spaces>
        <read_write>read</read_write>
      </stringio>
    </stringios>
	<analogios>
    <analogio>
      <!-- Measure the output voltage of the DCC booster -->
        <name>Voltage</name>
        <type>float</type>
        <signed>no</signed>
        <first_sv>20</first_sv>
        <min_value>0</min_value>
        <max_value>20</max_value>
        <read_write>read</read_write>
      </analogio>
      <analogio>
        <!-- Measure the output current of the DCC booster -->
        <name>Current</name>
        <type>float</type>
        <signed>no</signed>
        <first_sv>24</first_sv>
        <min_value>0</min_value>
        <max_value>3.5</max_value>
        <read_write>read</read_write>
      </analogio>
      <analogio>
        <!-- Set the brightness of the lights in the room -->
        <name>Room light</name>
        <type>byte</type>
        <signed>no</signed>
        <first_sv>28</first_sv>
        <min_value>0</min_value>
        <max_value>31</max_value>
        <read_write>write</read_write>
      </analogio>
      <analogio>
        <!-- Count axles. Negative value is reverse direction -->
        <name>Axle count</name>
        <type>word</type>
        <signed>yes</signed>
        <first_sv>32</first_sv>
        <read_write>read_write</read_write>
      </analogio>
      <analogio>
        <!-- Total axle count, independent of direction -->
        <name>Total axle count</name>
        <type>word</type>
        <signed>no</signed>
        <first_sv>32</first_sv>
        <read_write>read_write</read_write>
      </analogio>
	</analogios>
  </loconet-node>
</decoder-config>
